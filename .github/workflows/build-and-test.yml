name: Build, test and deploy

on:
  push:
    branches:
      - main
      - develop
      - ci-cd
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle packages
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

    outputs:
      gradle-cache-key: ${{ steps.cache-gradle.outputs.key }}

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ needs.build.outputs.gradle-cache-key || 'default-key' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Run PMD analysis
        run: ./gradlew pmdMain

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Extract commit SHA
        id: extract_sha
        run: echo "COMMIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:latest,${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:${{ env.COMMIT_SHA }}

      - name: Push Docker image with latest tag
        run: docker push ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:latest

      - name: Push Docker image with commit SHA tag
        run: docker push ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:${{ env.COMMIT_SHA }}

      - name: Tag and push Docker image with branch name
        if: github.event_name != 'pull_request'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:latest ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:${{ env.BRANCH_NAME }}
          docker push ${{ secrets.DOCKER_USERNAME }}/zokaloca-backend:${{ env.BRANCH_NAME }}